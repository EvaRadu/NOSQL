// EVA RADU   

public class CustomerLoader {

    ODatabaseSession db;

    public CustomerLoader(ODatabaseSession db) {
        this.db = db;
    }


    public void load() {
        if (this.db.getClass("Customer") == null) {
            OClass customer = db.createVertexClass("Customer");
            customer.createProperty("id", OType.STRING);
            customer.createProperty("firstName", OType.STRING);
            customer.createProperty("lastName", OType.STRING);
            customer.createProperty("gender", OType.STRING);
            customer.createProperty("birthday", OType.STRING);
            customer.createProperty("creationDate", OType.STRING);
            customer.createProperty("locationIP", OType.STRING);
            customer.createProperty("browserUsed", OType.STRING);
            customer.createProperty("place", OType.STRING);
            customer.createIndex("customer_index", OClass.INDEX_TYPE.UNIQUE, "id");
        }


        // Loading the csv product into a list of list of String
        List<List<String>> records = new ArrayList<List<String>>();
        try (CSVReader csvReader = new CSVReader(new FileReader("DATA/Customer/person_0_0.csv"), '|');) {
            String[] values = null;
            while ((values = csvReader.readNext()) != null) {
                records.add(Arrays.asList(values));
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        // Line 0 only contains the columns names, so we start at line 1
        for (int p = 1; p < records.size(); p++) {
            // We check if the customer already exists before adding it
            String query = "SELECT * from Customer where id = ?";

            OResultSet rs = this.db.query(query, records.get(p).get(0));
            if (rs.elementStream().count() == 0) {
                createCustomer(this.db, records.get(p).get(0), records.get(p).get(1), records.get(p).get(2),
                        records.get(p).get(3), records.get(p).get(4), records.get(p).get(5),
                        records.get(p).get(6), records.get(p).get(7), records.get(p).get(8));

            }
        }
        System.out.println("The Customers have been loaded");
    }

    public void loadEdges(){
        String query = "SELECT * from Customer";
        OResultSet rs = db.query(query);
        while(rs.hasNext()){
            if (db.getClass("EdgeCustomerOrder") == null) {
                OClass edgeVendorProduct = db.createEdgeClass("EdgeCustomerOrder");
            }
            createEdgeCustomerOrder(db, rs.vertexStream().findFirst().get());
        }

    }

    private static OVertex createCustomer(ODatabaseSession db, String id, String firstName, String lastName,
                                          String gender, String birthday, String creationDate, String locationIP,
                                          String browserUsed, String place) {
        OVertex result = db.newVertex("Customer");
        result.setProperty("id", id);
        result.setProperty("firstName", firstName);
        result.setProperty("lastName", lastName);
        result.setProperty("gender", gender);
        result.setProperty("birthday", birthday);
        result.setProperty("creationDate", creationDate);
        result.setProperty("locationIP", locationIP);
        result.setProperty("browserUsed", browserUsed);
        result.setProperty("place", place);

        result.save();
        /*
        if (db.getClass("EdgeCustomerOrder") == null) {
            OClass edgeVendorProduct = db.createEdgeClass("EdgeCustomerOrder");
        }

        createEdgeCustomerOrder(db, result);
         */
        return result;
    }

    private static void createEdgeCustomerOrder(ODatabaseSession db, OVertex customer){
        String idCustomer = customer.getProperty("id").toString();
        System.out.println(idCustomer);

        String query = "SELECT * from Order where PersonId = ?";
        OResultSet rsp = db.query(query, idCustomer);
        if(rsp.hasNext()){
            Optional<OVertex> optional = rsp.next().getVertex();
            rsp.close();
            if(optional.isPresent()){
                OVertex order = optional.get();
                customer.addEdge(order,"EdgeCustomerOrder");
                customer.save();
            }
        }
    }
}

/* RESULATS : 

SELECT * FROM Customer

+----+------+--------+-----+------+---------+---------+---------+---------+---------+---------+---------+---------+----------+----------+-----------+-----------+-----------+
|#   |@RID  |@CLASS  |place|gender|birthday |lastName |firstName|locationI|id       |browserUs|out_EdgeC|creationD|out_Feedba|out_Knows |in_Knows   |out_HasInte|in_HasCreat|
+----+------+--------+-----+------+---------+---------+---------+---------+---------+---------+---------+---------+----------+----------+-----------+-----------+-----------+
|0   |#74:0 |Customer|1263 |female|1981-0...|Maazou   |Albade   |41.138...|4145     |Intern...|[#154:...|2010-0...|[#88:64...|[#106:0...|[#108:46...|[#122:0,...|[#130:0,...|
|1   |#74:1 |Customer|1199 |female|1980-0...|Muni     |Claude   |41.74....|197912...|Opera    |[#154:...|2011-1...|[#89:12...|[#112:1...|[#111:66...|[#122:59...|[#132:12...|
|2   |#74:2 |Customer|383  |male  |1982-0...|Yang     |Bing     |1.90.1...|659706...|Intern...|[#154:...|2010-0...|[#83:12...|[#106:3...|[#111:29...|[#122:11...|[#130:21...|
|3   |#74:3 |Customer|1398 |male  |1983-0...|Baya     |Claudia  |197.14...|263882...|Chrome   |[#154:...|2012-0...|[#85:12...|[#110:4...|[#107:93...|[#122:16...|[#131:31...|
|4   |#74:4 |Customer|828  |female|1982-1...|Aquino   |Juan     |58.69....|175921...|Safari   |[#154:...|2011-0...|[#85:30...|[#106:7...|[#108:53...|[#122:22...|[#130:46...|
|5   |#74:5 |Customer|950  |female|1981-0...|Loan     |Cam      |113.23...|659706...|Firefox  |[#154:...|2010-0...|[#85:86...|[#106:8...|[#113:52...|[#122:27...|[#130:53...|
|6   |#74:6 |Customer|365  |female|1988-0...|Zhang    |Baoping  |27.115...|285873...|Firefox  |[#154:...|2012-0...|[#86:13...|[#109:9...|[#106:58...|[#122:33...|[#130:61...|
|7   |#74:7 |Customer|689  |male  |1983-0...|Ito      |Yuki     |27.111...|175921...|Firefox  |[#154:...|2011-0...|[#89:86...|[#113:1...|[#106:81...|[#122:38...|[#130:73...|
|8   |#74:8 |Customer|414  |male  |1982-0...|Chen     |Hao      |14.192...|439804...|Chrome   |[#154:...|2010-0...|[#87:8,...|[#111:1...|[#112:51...|[#122:44...|[#132:82...|
|9   |#74:9 |Customer|665  |female|1989-0...|Anwar    |A.       |103.3....|241892...|Chrome   |[#154:...|2012-0...|[#85:30...|[#106:1...|[#108:71...|[#122:49...|[#130:92...|
|10  |#74:10|Customer|1012 |male  |1983-1...|Michie   |Prakash  |61.4.7...|879609...|Chrome   |[#154:...|2010-1...|[#89:86...|          |[#113:55...|[#122:55...|[#133:10...|
|11  |#74:11|Customer|517  |female|1987-0...|Alvarez  |Alfredo  |200.1....|329853...|Chrome   |[#154:...|2012-0...|[#88:65...|          |[#110:91...|[#122:61...|[#136:10...|
|12  |#74:12|Customer|463  |female|1984-0...|Chen     |Ge       |14.127...|197912...|Firefox  |[#154:...|2011-0...|[#85:66...|          |           |[#122:67...|[#132:22...|
|13  |#74:13|Customer|448  |female|1983-1...|Liu      |Chen     |1.117....|879609...|Firefox  |[#154:...|2010-1...|[#89:87...|[#112:2...|[#108:80...|[#122:73...|[#130:12...|
|14  |#74:14|Customer|1100 |male  |1985-0...|Samir    |Abo El...|41.65....|307863...|Opera    |[#154:...|2012-0...|[#85:15...|[#109:2...|[#111:20...|[#122:78...|[#130:13...|
|15  |#74:15|Customer|1269 |male  |1988-1...|Castillo |Roberto  |200.0....|197912...|Intern...|[#154:...|2011-0...|[#85:16...|[#113:2...|[#110:50...|[#122:84...|[#132:14...|
|16  |#74:16|Customer|1436 |female|1985-0...|Al-Sho...|Abdulw...|82.114...|879609...|Firefox  |[#154:...|2010-1...|[#85:16...|[#107:2...|[#111:84...|[#122:90...|[#130:15...|
|17  |#74:17|Customer|577  |female|1988-0...|Alves    |Wilson   |200.0....|263882...|Firefox  |[#154:...|2012-0...|[#87:31...|[#110:2...|[#107:29...|[#122:95...|[#130:16...|
|18  |#74:18|Customer|942  |female|1982-0...|Doan     |Huong    |49.156...|153931...|Chrome   |[#154:...|2011-0...|[#85:17...|[#109:2...|[#111:36...|[#122:10...|[#130:17...|
|19  |#74:19|Customer|1140 |female|1988-0...|Angello  |Georgios |77.235...|439804...|Chrome   |[#154:...|2010-0...|[#86:66...|[#107:2...|[#111:11...|[#122:10...|[#130:18...|
+----+------+--------+-----+------+---------+---------+---------+---------+---------+---------+---------+---------+----------+----------+-----------+-----------+-----------+
LIMIT EXCEEDED: resultset contains more items not displayed (limit=20)


SELECT * FROM EdgeCustomerOrder

+----+-------+-----------------+--------+-------+
|#   |@RID   |@CLASS           |in      |out    |
+----+-------+-----------------+--------+-------+
|0   |#154:0 |EdgeCustomerOrder|#44:2009|#74:0  |
|1   |#154:1 |EdgeCustomerOrder|#49:1084|#74:8  |
|2   |#154:2 |EdgeCustomerOrder|#46:807 |#74:16 |
|3   |#154:3 |EdgeCustomerOrder|#49:756 |#74:24 |
|4   |#154:4 |EdgeCustomerOrder|#42:1523|#74:32 |
|5   |#154:5 |EdgeCustomerOrder|#46:1273|#74:40 |
|6   |#154:6 |EdgeCustomerOrder|#46:1666|#74:48 |
|7   |#154:7 |EdgeCustomerOrder|#47:16  |#74:56 |
|8   |#154:8 |EdgeCustomerOrder|#44:843 |#74:64 |
|9   |#154:9 |EdgeCustomerOrder|#44:1608|#74:72 |
|10  |#154:10|EdgeCustomerOrder|#45:734 |#74:80 |
|11  |#154:11|EdgeCustomerOrder|#46:44  |#74:88 |
|12  |#154:12|EdgeCustomerOrder|#42:1146|#74:96 |
|13  |#154:13|EdgeCustomerOrder|#46:1232|#74:104|
|14  |#154:14|EdgeCustomerOrder|#42:458 |#74:112|
|15  |#154:15|EdgeCustomerOrder|#44:2000|#74:120|
|16  |#154:16|EdgeCustomerOrder|#47:1760|#74:128|
|17  |#154:17|EdgeCustomerOrder|#49:2056|#74:136|
|18  |#154:18|EdgeCustomerOrder|#48:1139|#74:144|
|19  |#154:19|EdgeCustomerOrder|#43:1573|#74:152|
+----+-------+-----------------+--------+-------+
LIMIT EXCEEDED: resultset contains more items not displayed (limit=20)

*/