HasTag (Edge) arc
De même que les autre Edges / Arcs

1) On crée la classe type Edge

 if (db.getClass("HasTag") == null) {
            OClass hasTag = db.createEdgeClass("HasTag");
            hasTag.createProperty("idPost", OType.STRING);
            hasTag.createProperty("idTag", OType.STRING);
            hasTag.createIndex("hastag_index", OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX, "idPost", "idTag");
        }


2) On charge les données de CSV
   List<List<String>> records5 = new ArrayList<>();
        try (CSVReader csvReader = new CSVReader(new FileReader("DATA/SocialNetwork/post_hasTag_tag_0_0.csv"));) {
            String[] values = null;
            while ((values = csvReader.readNext()) != null) {
                records5.add(Arrays.asList(values));
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

3) On prépare les données pour crée l'entité dans la base
private void loadHasTag(List<List<String>> records) throws ParseException {
        for (int p = 1; p < records.size(); p++) {
            String[] line = records.get(p).toString().split("\\|");

            line[0] = line[0].replace("[", "");
            line[line.length - 1] = line[line.length - 1].replace("]", "");

            ArrayList<String> lineArray = new ArrayList<>(Arrays.asList(line));
            String idPost = lineArray.get(0);
            String idTag = lineArray.get(1);

            String query1 = "SELECT * from Post where idPost = ?";
            OResultSet rs1 = db.query(query1, idPost);
            Optional<OVertex> optionalID = rs1.vertexStream().findFirst();
            OVertex refPost = optionalID.get();

            String query2 = "SELECT * from Tag where idTag = ?";
            OResultSet rs2 = db.query(query2, idTag);
            Optional<OVertex> optionalID2 = rs2.vertexStream().findFirst();
            OVertex refTag = optionalID2.get();

            String query = "SELECT * from HasTag where idPost = ? and idTag = ? ";
            OResultSet rs = db.query(query, idPost, idTag);

            boolean createOrnot = rs.elementStream().count() == 0;
            if (createOrnot) {
                createHasTag(refPost, refTag);
            }
        }
    }

4) On crée l'arc HasTag dans la base de données et persite avec save()

  private void createHasTag(OVertex idPost, OVertex idTag) {
        OElement hasTag = db.newEdge(idPost, idTag, "HasTag");
        hasTag.setProperty("idPost", idPost.getProperty("idPost"));
        hasTag.setProperty("idTag", idTag.getProperty("idTag"));
        hasTag.save();
    }

